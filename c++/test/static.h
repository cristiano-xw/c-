#include<iostream>
#include<cstring>
#include<string>
using namespace std;
class PPerson{
public:
    //普通成员函数可以访问static和non-static成员属性
    void changeParam1(int param){
        mParam = param;
        sNum = param;
    }
    //静态成员函数只能访问static成员属性
    static void changeParam2(int param){
        //mParam = param; //无法访问
        sNum = param;
    }
private:
    static void changeParam3(int param){
        //mParam = param; //无法访问
        sNum = param;
    }
public:
    int mParam;
    static int sNum;
};
//静态成员属性类外初始化
int PPerson::sNum = 0;
 
void test_4()
{
    cout<<"4）静态成员的案例"<<endl;
    //1. 类名直接调用
    PPerson::changeParam2(100);
 
    //2. 通过对象调用
    PPerson p;
    p.changeParam2(200);
 
    //3. 静态成员函数也有访问权限
    //Person::changeParam3(100); //类外无法访问私有静态成员函数
}
